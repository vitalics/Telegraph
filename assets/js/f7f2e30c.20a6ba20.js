"use strict";(self.webpackChunk_tlgr_docs=self.webpackChunk_tlgr_docs||[]).push([[4498],{7522:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(9901);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=l,k=u["".concat(d,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(k,r(r({ref:t},s),{},{components:n})):a.createElement(k,r({ref:t},s))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5942:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(2875),l=(n(9901),n(7522));const i={},r="Button",o={unversionedId:"api/button/class",id:"api/button/class",title:"Button",description:"Provides api for a new button with custom name.",source:"@site/docs/api/button/class.mdx",sourceDirName:"api/button",slug:"/api/button/class",permalink:"/Telegraph/docs/next/api/button/class",draft:!1,editUrl:"https://github.com/vitalics/telegraph/tree/main/packages/docs/docs/api/button/class.mdx",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"Inline Component",permalink:"/Telegraph/docs/next/api/component/class"},next:{title:"events",permalink:"/Telegraph/docs/next/api/button/events"}},d={},p=[{value:"extends",id:"extends",level:2},{value:"<code>constructor(bot, name, [options])</code>",id:"constructorbot-name-options",level:2},{value:"methods",id:"methods",level:2},{value:"<code>render([payload])</code>",id:"renderpayload",level:3},{value:"<code>on(event, callback)</code>",id:"onevent-callback",level:3},{value:"<code>once(event, callback)</code>",id:"onceevent-callback",level:3},{value:"<code>emit(event, callback)</code>",id:"emitevent-callback",level:3},{value:"properties",id:"properties",level:2},{value:"<code>uuid</code>",id:"uuid",level:3},{value:"modifiers",id:"modifiers",level:4},{value:"description",id:"description",level:4},{value:"<code>name</code>",id:"name",level:3},{value:"modifiers",id:"modifiers-1",level:4},{value:"description",id:"description-1",level:4},{value:"<code>payload</code>",id:"payload",level:3},{value:"modifiers",id:"modifiers-2",level:4},{value:"description",id:"description-2",level:4}],s={toc:p};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"button"},"Button"),(0,l.kt)("p",null,"Provides api for a new button with custom name."),(0,l.kt)("p",null,"Button API is similar as for Node.js ",(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/dist/latest-v16.x/docs/api/events.html#class-eventemitter"},"EventEmitter")," class, but provides only ",(0,l.kt)("inlineCode",{parentName:"p"},"on"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"once"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"emit")," functions."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Button } from "@tlgr/button";\nconst button = new Button(options);\n')),(0,l.kt)("h2",{id:"extends"},"extends"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"./component"},"Component"))),(0,l.kt)("h2",{id:"constructorbot-name-options"},(0,l.kt)("inlineCode",{parentName:"h2"},"constructor(bot, name, [options])")),(0,l.kt)("small",null," added in 1.0.0 "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bot")," - <","[Object][object]",">. ",(0,l.kt)("a",{parentName:"li",href:"https://telegraf.js.org/classes/Telegraf.html"},"Telegraf")," instance."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," - <","[string][string]",">. Button name, or text which user will see."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"options?")," - <","[Object][object]",">",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"prefix")," - <","[string][string]",">. Name of the control. Default is ",(0,l.kt)("inlineCode",{parentName:"li"},"@tlgr/button")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableUUID")," - <","[boolean][boolean]",">. Enable/Disable uuid generation for button control. It guarantee about button has be unique name. Default is ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"payloadDivider")," -<","[string][string]",">. Payload divider between name and payload. Default is ",(0,l.kt)("inlineCode",{parentName:"li"},"-")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"alert")," - <","[Object][object]",">. Alert options. Default is ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"text"),"- <","[string][string]",">. Alert text."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mode")," - <","[string][string]",">. Alert mode. Possible values: ",(0,l.kt)("inlineCode",{parentName:"li"},"text")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"modal"),". Default is ",(0,l.kt)("inlineCode",{parentName:"li"},"text")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"show")," - <","[boolean][boolean]",">. Show modal or not. Default is ",(0,l.kt)("inlineCode",{parentName:"li"},"false"),".")))))),(0,l.kt)("h2",{id:"methods"},"methods"),(0,l.kt)("h3",{id:"renderpayload"},(0,l.kt)("inlineCode",{parentName:"h3"},"render([payload])")),(0,l.kt)("small",null," added in 1.0.0 "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"payload")," - <","[string][string]","> - payload name. Default is ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"),". Accepts ","[",(0,l.kt)("inlineCode",{parentName:"li"},"number"),"][number]",", ","[",(0,l.kt)("inlineCode",{parentName:"li"},"string"),"][string]",", ","[",(0,l.kt)("inlineCode",{parentName:"li"},"boolean"),"][boolean]"," or ","[",(0,l.kt)("inlineCode",{parentName:"li"},"symbol"),"][symbol]"," types.")),(0,l.kt)("h3",{id:"onevent-callback"},(0,l.kt)("inlineCode",{parentName:"h3"},"on(event, callback)")),(0,l.kt)("small",null," added in 1.0.0 "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"event")," - <","[string][string]",">. Event name. Only can be ",(0,l.kt)("inlineCode",{parentName:"p"},"click")," value. Other events will be ignored.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"callback")," - <","[Function][function]",">. Callback function"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ctx")," - <","[Object][object]",">. ",(0,l.kt)("a",{parentName:"li",href:"https://telegraf.js.org/classes/Context.html#addStickerToSet"},"Telegraf Context"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"button")," - <","[Object][object]",">. ",(0,l.kt)("a",{parentName:"li",href:"/docs/api/button"},"Button")," instance.")))),(0,l.kt)("h3",{id:"onceevent-callback"},(0,l.kt)("inlineCode",{parentName:"h3"},"once(event, callback)")),(0,l.kt)("small",null,"added in 1.0.0"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event")," - <","[string][string]",">. Event name. Only can be ",(0,l.kt)("inlineCode",{parentName:"li"},"click")," value. Other events will be ignored."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"callback")," - <","[Function][function]",">. Callback function",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ctx")," - <","[Object][object]",">. ",(0,l.kt)("a",{parentName:"li",href:"https://telegraf.js.org/classes/Context.html#addStickerToSet"},"Telegraf Context"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"button")," - <","[Object][object]",">. ",(0,l.kt)("a",{parentName:"li",href:"/docs/api/button"},"Button")," instance.")))),(0,l.kt)("h3",{id:"emitevent-callback"},(0,l.kt)("inlineCode",{parentName:"h3"},"emit(event, callback)")),(0,l.kt)("small",null,"added in 1.0.0"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event")," - <","[string][string]",">. Event name. Only can be ",(0,l.kt)("inlineCode",{parentName:"li"},"click")," value. Other events will be ignored."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ctx")," - <","[Object][object]",">. ",(0,l.kt)("a",{parentName:"li",href:"https://telegraf.js.org/classes/Context.html#addStickerToSet"},"Telegraf Context"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"button")," - <","[Object][object]",">. ",(0,l.kt)("a",{parentName:"li",href:"/docs/api/button"},"Button")," instance.")),(0,l.kt)("h2",{id:"properties"},"properties"),(0,l.kt)("h3",{id:"uuid"},(0,l.kt)("inlineCode",{parentName:"h3"},"uuid")),(0,l.kt)("small",null,"added in 1.0.0"),(0,l.kt)("h4",{id:"modifiers"},"modifiers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"readonly")),(0,l.kt)("h4",{id:"description"},"description"),(0,l.kt)("p",null,"Random generated hash. Returns ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," in case if ",(0,l.kt)("inlineCode",{parentName:"p"},"options.disableUUID=true")),(0,l.kt)("h3",{id:"name"},(0,l.kt)("inlineCode",{parentName:"h3"},"name")),(0,l.kt)("small",null,"added in 1.0.0"),(0,l.kt)("h4",{id:"modifiers-1"},"modifiers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"readonly"),(0,l.kt)("li",{parentName:"ul"},"getter")),(0,l.kt)("h4",{id:"description-1"},"description"),(0,l.kt)("p",null,"Resolved button name. This property consist of ",(0,l.kt)("inlineCode",{parentName:"p"},"options.prefix")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"options.disableUUID"),"."),(0,l.kt)("h3",{id:"payload"},(0,l.kt)("inlineCode",{parentName:"h3"},"payload")),(0,l.kt)("small",null,"added in 1.0.0"),(0,l.kt)("h4",{id:"modifiers-2"},"modifiers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"readonly"),(0,l.kt)("li",{parentName:"ul"},"getter")),(0,l.kt)("h4",{id:"description-2"},"description"),(0,l.kt)("p",null,"Called payload. Payload sets after ",(0,l.kt)("a",{parentName:"p",href:"'./button#renderpayload'"},(0,l.kt)("inlineCode",{parentName:"a"},"render([payload])"))," function"))}c.isMDXComponent=!0}}]);