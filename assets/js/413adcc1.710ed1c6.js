"use strict";(self.webpackChunk_tlgr_docs=self.webpackChunk_tlgr_docs||[]).push([[4786],{7522:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(9901);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=l,g=m["".concat(o,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:l,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9528:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(2875),l=(n(9901),n(7522));const r={},i="Analytics",s={unversionedId:"tutorial/analytics/index",id:"tutorial/analytics/index",title:"Analytics",description:"Installation",source:"@site/docs/tutorial/analytics/index.mdx",sourceDirName:"tutorial/analytics",slug:"/tutorial/analytics/",permalink:"/Telegraph/docs/tutorial/analytics/",draft:!1,editUrl:"https://github.com/vitalics/telegraph/tree/main/packages/docs/docs/tutorial/analytics/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorial",previous:{title:"Quiz",permalink:"/Telegraph/docs/tutorial/quiz"},next:{title:"Intro",permalink:"/Telegraph/docs/tutorial/fmt/base"}},o={},c=[{value:"Installation",id:"installation",level:2},{value:"PNPm",id:"pnpm",level:3},{value:"yarn",id:"yarn",level:3},{value:"npm",id:"npm",level:3},{value:"Usage",id:"usage",level:2},{value:"Plugins",id:"plugins",level:2},{value:"Stream",id:"stream",level:3},{value:"Custom plugins",id:"custom-plugins",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"analytics"},"Analytics"),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("h3",{id:"pnpm"},"PNPm"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @tlgr/analytics\n")),(0,l.kt)("h3",{id:"yarn"},"yarn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @tlgr/analytics\n")),(0,l.kt)("h3",{id:"npm"},"npm"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @tlgr/analytics\n")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("p",null,"Usage is simple as much as possible."),(0,l.kt)("p",null,"Example below creates command ",(0,l.kt)("inlineCode",{parentName:"p"},"start")," and reply with text ",(0,l.kt)("inlineCode",{parentName:"p"},"Hello world"),"."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=example.ts",title:"example.ts"},'import { Telegraf } from "telegraf";\nimport { Analytics } from "@tlgr/analytics";\n\nconst bot = new Telegraf("<API TOKEN>");\n\nconst analytics = new Analytics(bot, Plugin1, Plugin2, ...etc);\n\nbot.start((ctx) => {\n  // send "hello world" when user promts "/start"\n  ctx.reply("Hello world");\n});\n\n// simple usage\n// analytics.enable();\n// bot.launch();\n\n// advanced usage\nanalytics.enable(true); // starts bot. Better use this snippet since it fires additional event "bot:launch"\n\n// some time after\n//analytics.disable();\n// bot.stop();\n\n// or similar but in one line:\nanalytics.disable(true); // true = stop bot\n')),(0,l.kt)("h2",{id:"plugins"},"Plugins"),(0,l.kt)("p",null,"Currently only 3 plugins available:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"stream"),(0,l.kt)("li",{parentName:"ul"},"console"),(0,l.kt)("li",{parentName:"ul"},"file"),(0,l.kt)("li",{parentName:"ul"},"server")),(0,l.kt)("h3",{id:"stream"},"Stream"),(0,l.kt)("p",null,"Plugin which accepts writable stream and write result to this stream."),(0,l.kt)("h2",{id:"custom-plugins"},"Custom plugins"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"import plugin:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// filename: custom-plugin.ts\nimport type { Plugin } from '@tlgr/analytics/plugins';\n\nclass MyPlugin implements Plugin {\n  name = 'custom plugin';\n\n  constructor(){\n    http.initSession();\n  }\n\n  listener(event: string, param: any) {\n    console.log(event, param);\n    if(event === 'my custom event') {\n      http.post('http://server.com', param)\n    }\n  }\n  end(){\n    http.closeSession();\n  }\n}\n\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"use custom plugin in your code")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import { Telegraf } from 'telegraf';\nimport Analytics from './analytics';\n\nimport {MyPlugin} from './custom-plugin';\n\nconst TOKEN = '';\nconst bot = new Telegraf(TOKEN);\n\nconst analytics = new Analytics(bot, new MyPlugin());\n\nbot.start(ctx => {\n  // sends hello world when user sends \"/start\" command\n  bot.telegram.sendMessage(ctx.chat.id, 'Hello world');\n});\n\nanalytics.enable(true);\n")))}u.isMDXComponent=!0}}]);